{"version":3,"file":"main.js","mappings":"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","sources":["webpack://yandex_practikum/./src/scripts/components/modal.js","webpack://yandex_practikum/./src/index.js","webpack://yandex_practikum/./src/scripts/components/api.js","webpack://yandex_practikum/./src/scripts/components/card.js","webpack://yandex_practikum/./src/scripts/components/validation.js"],"sourcesContent":["//закрытие попапа с помощью Esc\r\nconst closeModalEscape = (evt) => {\r\n    if (evt.key === 'Escape') {\r\n        const openedPopup = document.querySelector('.popup_is-opened')\r\n        closeModal(openedPopup)\r\n    }\r\n}\r\n\r\n// функция попап ОТРКЫТИЕ\r\nconst openModal = (element) => {\r\n    element.classList.add('popup_is-opened')\r\n    //вешаю обработчик для Esc\r\n    document.addEventListener('keydown', closeModalEscape)\r\n}\r\n\r\n// функция попап ЗАКРЫТИЕ\r\nconst closeModal = (element) => {\r\n    element.classList.remove('popup_is-opened')\r\n    //снимаю обработчки для Esc\r\n    document.removeEventListener('keydown', closeModalEscape)\r\n}\r\n\r\n//закрытие попапа кликом вне элемента\r\nconst closeModalOverlay = (evt) => {\r\n    if (evt.target.classList.contains('popup')) {\r\n        closeModal(evt.target)\r\n    }\r\n}\r\n\r\nexport { openModal, closeModal, closeModalOverlay }","import '/src/pages/index.css';\n\nimport { openModal, closeModal, closeModalOverlay } from '/src/scripts/components/modal.js';\nimport {createCard, handleDeleteCard, handleLikeCard} from '/src/scripts/components/card.js';\nimport {enableValidation, clearValidation} from '../src/scripts/components/validation.js'\nimport {getUserName, getInitialCards, editUserProfile, postNewCard, changeAvatar } from '../src/scripts/components/api.js'\n\n\n// @todo: DOM узлы\nconst placesList = document.querySelector('.places__list');\n//элементы\nconst popups = document.querySelectorAll('.popup');\nconst popupProfile = document.querySelector('.popup_type_edit');\nconst popupNewCard = document.querySelector('.popup_type_new-card');\nconst popupImage = document.querySelector('.popup__image');\nconst popupImageText = document.querySelector('.popup__caption');\nconst popupTypeImage = document.querySelector('.popup_type_image');\nconst avatarChangePopup = document.querySelector('.popup_change_avatar');\nconst profileTitle = document.querySelector('.profile__title');\nconst profileDescription = document.querySelector('.profile__description');\nconst profileImage = document.querySelector('.profile__image');\n//кнопки\nconst editButton = document.querySelector('.profile__edit-button');\nconst profileAddButton = document.querySelector('.profile__add-button');\nconst buttons = document.querySelectorAll('#button');\n//формы\nconst newPlaceForm = document.forms.newPlace;\nconst editProfileForm = document.forms.editProfile\nconst nameInput = editProfileForm.name;\nconst jobInput = editProfileForm.description;\nconst profileImageForm = document.forms.profileImage;\n//объект с настройками валидации\nconst validationConfig = {\n    formSelector: '.popup__form',\n    inputSelector: '.popup__input',\n    submitButtonSelector: '.popup__button',\n    inactiveButtonClass: 'popup__button_disabled',\n    inputErrorClass: 'popup__input_type_error',\n    errorClass: 'popup__error_visible',\n}\n//Айди владельца аккаунта\nlet ownerId\n\n\n\n//стилизация кнопок для пользователя \"идёт загрузка\"\nfunction renderLoading (isLoading) {\n    if (isLoading) {\n        buttons.forEach((buttonElement) => buttonElement.innerText = 'Загружается...')\n    } else {\n        buttons.forEach((buttonElement) => buttonElement.innerText = 'Сохранить')\n        \n    }\n}\n\n//открытие попапа формы изменения профиля\nconst openPopupProfileForm = () => {\n    //изменине значения плейсхолдера в редактировании имени и инфы о себе\n    nameInput.value = profileTitle.textContent;\n    jobInput.value = profileDescription.textContent;\n    clearValidation(editProfileForm, validationConfig)\n    openModal(popupProfile)\n}\n\n// отправка формы изменения профиля\nconst handleProfileFormSubmit = (evt) => {\n    evt.preventDefault();\n    renderLoading(true)\n    \n    // Получите значение полей jobInput и nameInput из свойства value\n    const userName = nameInput.value;\n    const userJob = jobInput.value;\n\n    // Вставьте новые значения\n    editUserProfile(userName, userJob)\n    .then((data) => {\n        profileTitle.textContent = data.name;\n        profileDescription.textContent = data.about;\n        closeModal(popupProfile);\n        editProfileForm.reset();\n    })\n    .catch ((err) => {\n        console.log(err);\n    })\n    .finally (() => renderLoading(false))\n\n    \n}\n//функция клика по изображению\nconst increaseImage = (image, text) => {\n    \n    popupImage.src = image.src;\n    popupImage.alt = image.alt;\n    popupImageText.textContent = text.textContent;\n\n    openModal(popupTypeImage)\n}\n\n//объект параметров для createCard\nconst params = { \n    openModal: openModal,\n    closeModal: closeModal,\n    handleLikeCard: handleLikeCard,\n    increaseImage: increaseImage,\n    handleDeleteCard: handleDeleteCard\n}\n\n//вызов функции валидации всех форм\nenableValidation(validationConfig);\n\n//вывожу инфу о профиле и все карточки\nPromise.all([getUserName(), getInitialCards()])\n.then ((data) => {\n    profileTitle.textContent = data[0].name;\n    profileDescription.textContent = data[0].about;\n    profileImage.style = `background-image: url(\"${data[0].avatar}\")`;\n    ownerId = data[0]._id;\n    return data[1].forEach ((cardElement) => {\n        placesList.append(createCard(cardElement, params, ownerId));\n    });\n})\n.catch ((err) => {\n    console.log(err);\n})\n\n//функция добавления карточки в разметку через попап\nconst handleCardFormSubmit = (evt) => {\n    evt.preventDefault();\n    const newPlaceCard = {\n        name: newPlaceForm.name.value,\n        link: newPlaceForm.link.value\n    }\n\n    renderLoading(true)\n\n    postNewCard(newPlaceCard)\n    .then((data) => {\n        console.log(ownerId)\n        placesList.prepend(createCard(\n            data,\n            params,\n            ownerId\n        ));\n    })\n    .then (() => {\n        clearValidation(newPlaceForm, validationConfig);\n        closeModal(popupNewCard)    \n        newPlaceForm.reset();\n    })\n    .catch((err) => {\n        console.log(err)\n    })\n    .finally (() => renderLoading(false))\n}\n\n// Прикрепляем обработчик к форме: он будет следить за событием “submit” - «отправка»\neditProfileForm.addEventListener('submit', handleProfileFormSubmit); \n\n//слушатель добавления новой карточки через форму\nnewPlaceForm.addEventListener('submit', handleCardFormSubmit);\n\n//перебор массива popup и процесс закрытия попапов\npopups.forEach((element) => {\n    //закрытие попапа кнопкой\n    const closeButton = element.querySelector('.popup__close')\n    closeButton.addEventListener('click', () => closeModal(element))\n    //закрытие попапа кликом вне элемента\n    element.addEventListener('click', closeModalOverlay)\n})\n\n// открытие попапов в шапке сайта\n//(изменение профиля, добавление карточки, изменение аватара)\neditButton.addEventListener('click', openPopupProfileForm);\nprofileAddButton.addEventListener('click', () => {\n    openModal(popupNewCard);\n});\nprofileImage.addEventListener('click', () => {\n    clearValidation(profileImageForm, validationConfig)\n    openModal(avatarChangePopup);\n})\n\n//изменение аватара\nprofileImageForm.addEventListener('submit', () => {\n    renderLoading(true)\n    changeAvatar(profileImageForm.image.value)\n    .then (data => {\n        console.log(data);\n        profileImage.style = `background-image: url(\"${data.avatar}\")`;\n        closeModal(avatarChangePopup);\n        profileImageForm.reset();\n    })\n    .catch ((err) => {\n        console.log(err);\n    })\n    .finally (() => renderLoading(false))\n\n})\n\n","const config = {\r\n    baseUrl: 'https://nomoreparties.co/v1/wff-cohort-24/',\r\n    headers: {\r\n      authorization: 'c430b10e-6e02-4ef6-8316-b9743be3525c',\r\n      \"Content-Type\": 'application/json',\r\n    },\r\n};\r\n\r\nconst handleResult = (res) => {\r\n    if (res.ok) {\r\n        return res.json();\r\n    }\r\n    return Promise.reject(`Ошибка: ${result.status}`)\r\n}\r\n\r\n//загрузка информации о пользователе с сервера\r\nexport const getUserName = () => {\r\n    return fetch(`${config.baseUrl}/users/me`, {\r\n        method: 'GET',\r\n        headers: config.headers\r\n    })\r\n    .then( (result) => {\r\n        return handleResult(result)\r\n    })\r\n} \r\n\r\n//отправка изменений данных профиля\r\nexport const editUserProfile = (name, about) => {\r\n    return fetch(`${config.baseUrl}/users/me`, {\r\n        method:'PATCH',\r\n        headers: config.headers,\r\n        body: JSON.stringify({\r\n            name: name,\r\n            about: about\r\n        })\r\n    })\r\n    .then( (result) => {\r\n        return handleResult(result)\r\n    })\r\n}\r\n\r\n//загрузка карточек с сервера\r\nexport const getInitialCards = () => {\r\n    return fetch(`${config.baseUrl}/cards`, {\r\n        method: 'GET',\r\n        headers: config.headers,\r\n    })\r\n    .then( (result) => {\r\n        return handleResult(result)\r\n    })\r\n}\r\n\r\n//отправка данных о новой карточке\r\nexport const postNewCard = ({name, link}) => {\r\n    return fetch(`${config.baseUrl}/cards`, {\r\n        method: 'POST',\r\n        headers: config.headers,\r\n        body: JSON.stringify({\r\n            name: name,\r\n            link: link\r\n        })\r\n    })\r\n    .then( (result) => {\r\n        return handleResult(result)\r\n    })\r\n}\r\n\r\n//ставим лайк\r\nexport const putLike = (cardId) => {\r\n    return fetch(`${config.baseUrl}/cards/likes/${cardId}`, {\r\n        method: 'PUT',\r\n        headers: config.headers\r\n    })\r\n    .then( (result) => {\r\n        return handleResult(result)\r\n    })\r\n}\r\n\r\n//удаляем лайк\r\nexport const deleteLike = (cardId) => {\r\n    return fetch(`${config.baseUrl}/cards/likes/${cardId}`, {\r\n        method: 'DELETE',\r\n        headers: config.headers,\r\n    })\r\n    .then( (result) => {\r\n        return handleResult(result)\r\n    })\r\n}\r\n\r\n//удаляем карточку\r\nexport const deleteCard = (cardId) => {\r\n    return fetch(`${config.baseUrl}/cards/${cardId}`, {\r\n        method: 'DELETE',\r\n        headers: config.headers,\r\n    })\r\n    .then( (result) => {\r\n        return handleResult(result)\r\n    })\r\n}\r\n\r\n//меняем аватар\r\nexport const changeAvatar = (avatar) => {\r\n    return fetch(`${config.baseUrl}/users/me/avatar `, {\r\n        method: 'PATCH',\r\n        headers: config.headers,\r\n        body: JSON.stringify({\r\n            avatar: avatar\r\n        })\r\n    })\r\n    .then( (result) => {\r\n        return handleResult(result)\r\n    })\r\n}","import { deleteCard, deleteLike, putLike } from \"./api.js\"\r\n\r\n// @todo: Функция убирания карточки\r\nconst removeCard = (card) => {\r\n    card.remove()\r\n}\r\n\r\n//функция лайка карточки\r\nconst likeCard = (element) => {\r\n    element.classList.toggle('card__like-button_is-active')\r\n}\r\n\r\n//общая функция лайка\r\nexport const handleLikeCard = (cardLikeButton, id, cardLikeCounter) => {\r\n    if (cardLikeButton.classList.contains('card__like-button_is-active')) {\r\n        deleteLike(id)\r\n        .then (data => {\r\n            //отображение лайков карточки\r\n            cardLikeCounter.textContent = data.likes.length\r\n            likeCard(cardLikeButton)\r\n        })\r\n        .catch((err) => {\r\n            console.log(err)\r\n        })\r\n    } else {\r\n        putLike(id)\r\n        .then (data => {\r\n            //отображение лайков карточки\r\n            cardLikeCounter.textContent = data.likes.length\r\n            likeCard(cardLikeButton)\r\n        })\r\n        .catch((err) => {\r\n            console.log(err)\r\n        })\r\n    }\r\n}\r\n\r\n//функция удаления карточки\r\nexport const handleDeleteCard = (cardElement, removeCard, card) => {\r\n    deleteCard(cardElement._id)\r\n.then ((data) => {\r\n    console.log(data)\r\n    removeCard(card)\r\n})\r\n.catch((err) => {\r\n    console.log(err)\r\n})\r\n}\r\n\r\n// @todo: Функция создания карточки\r\nexport const createCard = (cardElement, params, ownerId) => {\r\n    // @todo: Темплейт карточки\r\n    const cardTemplate = document.querySelector('#card-template').content;\r\n    const card = cardTemplate.querySelector('.card').cloneNode(true);\r\n    const cardImage = card.querySelector('.card__image');\r\n    const cardTitle = card.querySelector('.card__title');\r\n    const cardLikeCounter = card.querySelector('.card__like-counter')\r\n    const cardDeleteButton = card.querySelector('.card__delete-button');\r\n\r\n    //попробовать переделать функцию с распознаванием, \r\n    //является ли cardElement частью формы\r\n    cardImage.src = cardElement.link;\r\n    cardImage.alt = cardElement.name;\r\n    cardTitle.textContent = cardElement.name;\r\n    cardLikeCounter.textContent = cardElement.likes.length\r\n\r\n    //лайкнуть карточку\r\n    //сохранить цвет лайка на мною лайкнутых карточках\r\n    const cardLikeButton = card.querySelector('.card__like-button');\r\n    function handleLiking (ownerId, element) {\r\n        if (cardElement.likes.find(item => item._id === ownerId)) {\r\n            element.classList.add('card__like-button_is-active')\r\n        }\r\n    }\r\n\r\n    handleLiking(ownerId, cardLikeButton)\r\n\r\n\r\n    //слушатель лайка\r\n    cardLikeButton.addEventListener('click', () => params.handleLikeCard(cardLikeButton, cardElement._id, cardLikeCounter))\r\n\r\n    //увеличить картинку\r\n    cardImage.addEventListener('click', () => params.increaseImage(cardImage, cardTitle));\r\n    \r\n    //удалить карточку\r\n    if (cardElement.owner._id !== ownerId) {\r\n        cardDeleteButton.remove()\r\n    } else {\r\n        cardDeleteButton.addEventListener('click', () => {\r\n            handleDeleteCard(cardElement, removeCard, card)\r\n        })\r\n    }  \r\n\r\n    return card;\r\n}\r\n\r\n","// сообщение об ошибке\r\nconst showInputError = (formElement, inputElement, errorMessage, validationConfig) => {\r\n    const errorElement = formElement.querySelector(`.${inputElement.name}-error`);\r\n    errorElement.classList.add(validationConfig.inputErrorClass);\r\n    errorElement.textContent = errorMessage;\r\n    inputElement.classList.add(validationConfig.errorClass);\r\n};\r\n  \r\nconst hideInputError = (formElement, inputElement, validationConfig) => {\r\n    const errorElement = formElement.querySelector(`.${inputElement.name}-error`);\r\n    errorElement.classList.remove(validationConfig.inputErrorClass);\r\n    inputElement.classList.remove(validationConfig.errorClass);\r\n    errorElement.textContent = '';\r\n    inputElement.setCustomValidity(\"\");\r\n};\r\n\r\n//проверка валидности формы\r\nconst checkInputValidity = (formElement, inputElement, validationConfig) => {\r\n    if (inputElement.validity.patternMismatch) {\r\n        // данные атрибута доступны у элемента инпута через ключевое слово dataset.\r\n        // обратите внимание, что в js имя атрибута пишется в camelCase (да-да, в\r\n        // HTML мы писали в kebab-case, это не опечатка)\r\n        inputElement.setCustomValidity(inputElement.dataset.errorMessage);\r\n    } else {\r\n        inputElement.setCustomValidity(\"\");\r\n    };\r\n    if (!inputElement.validity.valid) {\r\n        showInputError(formElement, inputElement, inputElement.validationMessage, validationConfig);\r\n    } else {\r\n        hideInputError(formElement, inputElement, validationConfig);\r\n    };\r\n};\r\n\r\n//проверка валидностей полей\r\nconst hasInvalidInput = (inputList) => {\r\n    return inputList.some((inputElement) => {\r\n      return !inputElement.validity.valid;\r\n    })\r\n};\r\n\r\n\r\n//переключение кнопки\r\nconst toggleButtonState = (inputList, buttonElement, validationConfig) => {\r\n    if (hasInvalidInput(inputList)) {\r\n      buttonElement.classList.add(validationConfig.inactiveButtonClass);\r\n    } else {\r\n      buttonElement.classList.remove(validationConfig.inactiveButtonClass);\r\n    }\r\n};\r\n\r\n//переключение\r\nconst setEventListeners = (formElement, validationConfig) => {\r\n    const inputList = Array.from(formElement.querySelectorAll(validationConfig.inputSelector));\r\n    const buttonElement = formElement.querySelector(validationConfig.submitButtonSelector);\r\n    toggleButtonState(inputList, buttonElement, validationConfig);\r\n    inputList.forEach((inputElement) => {\r\n      inputElement.addEventListener('input', function () {\r\n        checkInputValidity(formElement, inputElement, validationConfig);\r\n        toggleButtonState(inputList, buttonElement, validationConfig);\r\n      });\r\n    });\r\n};\r\n\r\n// включение валидации всех форм\r\nconst enableValidation = (validationConfig) => {\r\n    const formList = Array.from(document.querySelectorAll(validationConfig.formSelector));\r\n    formList.forEach((formElement) => {\r\n        formElement.addEventListener('submit', function (evt) {\r\n            evt.preventDefault();\r\n        });\r\n        setEventListeners(formElement, validationConfig);\r\n    });\r\n};\r\n\r\nconst clearValidation = (formElement, validationConfig) => {\r\n    const inputList = Array.from(formElement.querySelectorAll(validationConfig.inputSelector));\r\n    const buttonElement = formElement.querySelector(validationConfig.submitButtonSelector);\r\n    buttonElement.classList.add(validationConfig.inactiveButtonClass)\r\n    inputList.forEach((inputElement) => {\r\n        hideInputError (formElement, inputElement, validationConfig)\r\n    });\r\n}\r\n\r\nexport {enableValidation, clearValidation}"],"names":["ownerId","closeModalEscape","evt","key","openedPopup","document","querySelector","closeModal","openModal","element","classList","add","addEventListener","remove","removeEventListener","closeModalOverlay","target","contains","config","baseUrl","headers","authorization","handleResult","res","ok","json","Promise","reject","concat","result","status","removeCard","card","likeCard","toggle","handleDeleteCard","cardElement","cardId","_id","fetch","method","then","data","console","log","catch","err","createCard","params","content","cloneNode","cardImage","cardTitle","cardLikeCounter","cardDeleteButton","src","link","alt","name","textContent","likes","length","cardLikeButton","find","item","handleLiking","handleLikeCard","increaseImage","owner","hideInputError","formElement","inputElement","validationConfig","errorElement","inputErrorClass","errorClass","setCustomValidity","toggleButtonState","inputList","buttonElement","some","validity","valid","hasInvalidInput","inactiveButtonClass","clearValidation","Array","from","querySelectorAll","inputSelector","submitButtonSelector","forEach","placesList","popups","popupProfile","popupNewCard","popupImage","popupImageText","popupTypeImage","avatarChangePopup","profileTitle","profileDescription","profileImage","editButton","profileAddButton","buttons","newPlaceForm","forms","newPlace","editProfileForm","editProfile","nameInput","jobInput","description","profileImageForm","formSelector","renderLoading","isLoading","innerText","id","putLike","image","text","preventDefault","patternMismatch","dataset","errorMessage","showInputError","validationMessage","checkInputValidity","setEventListeners","enableValidation","all","about","style","avatar","append","value","body","JSON","stringify","reset","finally","_ref","newPlaceCard","prepend"],"sourceRoot":""}