{"version":3,"file":"main.js","mappings":"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","sources":["webpack://yandex_practikum/./src/scripts/components/modal.js","webpack://yandex_practikum/./src/scripts/components/card.js","webpack://yandex_practikum/./src/scripts/components/validation.js","webpack://yandex_practikum/./src/scripts/components/api.js","webpack://yandex_practikum/./src/index.js"],"sourcesContent":["//закрытие попапа с помощью Esc\r\nconst closeModalEscape = (evt) => {\r\n    if (evt.key === 'Escape') {\r\n        const openedPopup = document.querySelector('.popup_is-opened')\r\n        closeModal(openedPopup)\r\n    }\r\n}\r\n\r\n// функция попап ОТРКЫТИЕ\r\nconst openModal = (element) => {\r\n    element.classList.add('popup_is-opened')\r\n    //вешаю обработчик для Esc\r\n    document.addEventListener('keydown', closeModalEscape)\r\n}\r\n\r\n// функция попап ЗАКРЫТИЕ\r\nconst closeModal = (element) => {\r\n    element.classList.remove('popup_is-opened')\r\n    //снимаю обработчки для Esc\r\n    document.removeEventListener('keydown', closeModalEscape)\r\n}\r\n\r\n//закрытие попапа кликом вне элемента\r\nconst closeModalOverlay = (evt) => {\r\n    if (evt.target.classList.contains('popup')) {\r\n        closeModal(evt.target)\r\n    }\r\n}\r\n\r\nexport { openModal, closeModal, closeModalOverlay }","// @todo: Функция удаления карточки\r\nexport const removeCard = (card) => {\r\n    card.remove()\r\n}\r\n\r\n//функция лайка карточки\r\nexport const likeCard = (element) => {\r\n    element.classList.toggle('card__like-button_is-active')\r\n}\r\n\r\n// @todo: Функция создания карточки\r\nexport const createCard = (cardElement, params) => {\r\n    // @todo: Темплейт карточки\r\n    const cardTemplate = document.querySelector('#card-template').content;\r\n    const card = cardTemplate.querySelector('.card').cloneNode(true);\r\n    const cardImage = card.querySelector('.card__image');\r\n    const cardTitle = card.querySelector('.card__title');\r\n    const cardLikeCounter = card.querySelector('.card__like-counter')\r\n\r\n    //попробовать переделать функцию с распознаванием, \r\n    //является ли cardElement частью формы\r\n    cardImage.src = cardElement.link;\r\n    cardImage.alt = cardElement.name;\r\n    cardTitle.textContent = cardElement.name;\r\n    cardLikeCounter.textContent = cardElement.likes.length\r\n\r\n    //лайкнуть карточку\r\n    //сохранить цвет лайка на мною лайкнутых карточках\r\n    const cardLikeButton = card.querySelector('.card__like-button');\r\n    function handleLiking (ownerId, element) {\r\n        if (cardElement.likes.find(item => item._id === ownerId)) {\r\n            element.classList.add('card__like-button_is-active')\r\n        }\r\n    }\r\n\r\n    handleLiking(params.ownerId, cardLikeButton)\r\n\r\n\r\n    //слушатель лайка\r\n    cardLikeButton.addEventListener('click', () => params.handleLikeCard(cardLikeButton, cardElement._id, cardLikeCounter))\r\n\r\n    //увеличить картинку\r\n    cardImage.addEventListener('click', () => params.increaseImage(cardImage, cardTitle));\r\n    \r\n    //удалить карточку\r\n    const cardDeleteButton = card.querySelector('.card__delete-button');\r\n    function handleDeleteCard (ownerId, cardDeleteButton) {\r\n        if (cardElement.owner._id !== ownerId) {\r\n            cardDeleteButton.remove()\r\n        } else {\r\n            card.querySelector('.card__delete-button').addEventListener('click', () => {\r\n                params.openModal(document.querySelector('.popup_type_confirmation'));\r\n                document.querySelector('.popup__button-confirm').addEventListener('click', () => {\r\n                    params.deleteCard(cardElement._id)\r\n                    .then (res => {\r\n                        params.removeCard(card)\r\n                        params.closeModal(document.querySelector('.popup_type_confirmation'))\r\n                        console.log(res)\r\n                    })\r\n                    .catch((err) => {\r\n                        console.log(err)\r\n                    })\r\n                })\r\n            });\r\n        };\r\n        \r\n    }\r\n\r\n    handleDeleteCard(params.ownerId, cardDeleteButton)\r\n\r\n    return card;\r\n}\r\n\r\n","// сообщение об ошибке\r\nconst showInputError = (formElement, inputElement, errorMessage, validationConfig) => {\r\n    const errorElement = formElement.querySelector(`.${inputElement.name}-error`);\r\n    errorElement.classList.add(validationConfig.inputErrorClass);\r\n    errorElement.textContent = errorMessage;\r\n    inputElement.classList.add(validationConfig.errorClass);\r\n};\r\n  \r\nconst hideInputError = (formElement, inputElement, validationConfig) => {\r\n    const errorElement = formElement.querySelector(`.${inputElement.name}-error`);\r\n    errorElement.classList.remove(validationConfig.inputErrorClass);\r\n    inputElement.classList.remove(validationConfig.errorClass);\r\n    errorElement.textContent = '';\r\n};\r\n\r\n//проверка валидности формы\r\nconst checkInputValidity = (formElement, inputElement, validationConfig) => {\r\n    if (inputElement.validity.patternMismatch) {\r\n        // данные атрибута доступны у элемента инпута через ключевое слово dataset.\r\n        // обратите внимание, что в js имя атрибута пишется в camelCase (да-да, в\r\n        // HTML мы писали в kebab-case, это не опечатка)\r\n        inputElement.setCustomValidity(inputElement.dataset.errorMessage);\r\n    } else {\r\n        inputElement.setCustomValidity(\"\");\r\n    };\r\n    if (!inputElement.validity.valid) {\r\n        showInputError(formElement, inputElement, inputElement.validationMessage, validationConfig);\r\n    } else {\r\n        hideInputError(formElement, inputElement, validationConfig);\r\n    };\r\n};\r\n\r\n//проверка валидностей полей\r\nconst hasInvalidInput = (inputList) => {\r\n    return inputList.some((inputElement) => {\r\n      return !inputElement.validity.valid;\r\n    })\r\n};\r\n\r\n\r\n//переключение кнопки\r\nconst toggleButtonState = (inputList, buttonElement, validationConfig) => {\r\n    if (hasInvalidInput(inputList)) {\r\n      buttonElement.classList.add(validationConfig.inactiveButtonClass)\r\n    } else {\r\n      buttonElement.classList.remove(validationConfig.inactiveButtonClass)\r\n    }\r\n};\r\n\r\n//переключение\r\nconst setEventListeners = (formElement, validationConfig) => {\r\n    const inputList = Array.from(formElement.querySelectorAll(validationConfig.inputSelector));\r\n    const buttonElement = formElement.querySelector(validationConfig.submitButtonSelector);\r\n    toggleButtonState(inputList, buttonElement, validationConfig);\r\n    inputList.forEach((inputElement) => {\r\n      inputElement.addEventListener('input', function () {\r\n        checkInputValidity(formElement, inputElement, validationConfig);\r\n        toggleButtonState(inputList, buttonElement, validationConfig);\r\n      });\r\n    });\r\n};\r\n\r\n// включение валидации всех форм\r\nconst enableValidation = (validationConfig) => {\r\n    const formList = Array.from(document.querySelectorAll(validationConfig.formSelector));\r\n    formList.forEach((formElement) => {\r\n        formElement.addEventListener('submit', function (evt) {\r\n            evt.preventDefault();\r\n        });\r\n        setEventListeners(formElement, validationConfig);\r\n    });\r\n};\r\n\r\nconst clearValidation = (formElement, validationConfig) => {\r\n    const inputList = Array.from(formElement.querySelectorAll(validationConfig.inputSelector));\r\n    const buttonElement = formElement.querySelector(validationConfig.submitButtonSelector);\r\n    buttonElement.classList.add(validationConfig.inactiveButtonClass)\r\n    inputList.forEach((inputElement) => {\r\n        hideInputError (formElement, inputElement, validationConfig)\r\n    });\r\n}\r\n\r\nexport {enableValidation, clearValidation}","const config = {\r\n    baseUrl: 'https://nomoreparties.co/v1/wff-cohort-24/',\r\n    headers: {\r\n      authorization: 'c430b10e-6e02-4ef6-8316-b9743be3525c',\r\n      'Content-Type': 'application/json'\r\n    }\r\n}\r\n\r\n//загрузка информации о пользователе с сервера\r\nexport const getUserName = () => {\r\n    return fetch(`${config.baseUrl}/users/me`, {\r\n        method: 'GET',\r\n        headers: {\r\n            authorization: 'c430b10e-6e02-4ef6-8316-b9743be3525c'\r\n        }\r\n    })\r\n    .then(res => {\r\n        if (res.ok) {\r\n            return res.json();\r\n          }\r\n          return Promise.reject(`Ошибка: ${res.status}`)\r\n    })\r\n} \r\n\r\n//отправка изменений данных пор\r\nexport const editUserProfile = (name, about) => {\r\n    return fetch(`${config.baseUrl}/users/me`, {\r\n        method:'PATCH',\r\n        headers: {\r\n            authorization: 'c430b10e-6e02-4ef6-8316-b9743be3525c',\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n            name: name,\r\n            about: about\r\n        })\r\n    })\r\n    .then(res => {\r\n        if (res.ok) {\r\n            return res.json();\r\n          }\r\n        return Promise.reject(`Ошибка: ${res.status}`)\r\n    })\r\n}\r\n\r\n//загрузка карточек с сервера\r\nexport const getInitialCards = () => {\r\n    return fetch(`${config.baseUrl}/cards`, {\r\n        method: 'GET',\r\n        headers: {\r\n            authorization: 'c430b10e-6e02-4ef6-8316-b9743be3525c',\r\n            'Content-Type': 'application/json'\r\n        }\r\n    })\r\n    .then(res => {\r\n        if (res.ok) {\r\n            return res.json();\r\n          }\r\n        return Promise.reject(`Ошибка: ${res.status}`)\r\n    })\r\n}\r\n\r\n//отправка данных о новой карточке\r\nexport const postNewCard = ({name, link}) => {\r\n    return fetch(`${config.baseUrl}/cards`, {\r\n        method: 'POST',\r\n        headers: {\r\n            authorization: 'c430b10e-6e02-4ef6-8316-b9743be3525c',\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n            name: name,\r\n            link: link\r\n        })\r\n    })\r\n    .then(res => {\r\n        if (res.ok) {\r\n            return res.json();\r\n          }\r\n        return Promise.reject(`Ошибка: ${res.status}`)\r\n    })\r\n}\r\n\r\nexport const putLike = (cardId) => {\r\n    return fetch(`${config.baseUrl}/cards/likes/${cardId}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n            authorization: 'c430b10e-6e02-4ef6-8316-b9743be3525c',\r\n            'Content-Type': 'application/json'\r\n        },\r\n    })\r\n    .then(res => {\r\n        if (res.ok) {\r\n          return res.json();\r\n        }\r\n        return Promise.reject(`Ошибка: ${res.status}`)\r\n    })\r\n}\r\n\r\nexport const deleteLike = (cardId) => {\r\n    return fetch(`${config.baseUrl}/cards/likes/${cardId}`, {\r\n        method: 'DELETE',\r\n        headers: {\r\n            authorization: 'c430b10e-6e02-4ef6-8316-b9743be3525c',\r\n            'Content-Type': 'application/json'\r\n        },\r\n    })\r\n    .then(res => {\r\n        if (res.ok) {\r\n            return res.json();\r\n          }\r\n          return Promise.reject(`Ошибка: ${res.status}`)\r\n    })\r\n}\r\n\r\nexport const deleteCard = (cardId) => {\r\n    return fetch(`${config.baseUrl}/cards/${cardId}`, {\r\n        method: 'DELETE',\r\n        headers: {\r\n            authorization: 'c430b10e-6e02-4ef6-8316-b9743be3525c',\r\n            'Content-Type': 'application/json'\r\n        },\r\n    })\r\n    .then(res => {\r\n        if (res.ok) {\r\n          return res.json();\r\n        }\r\n        return Promise.reject(`Ошибка: ${res.status}`)\r\n    })\r\n}\r\n\r\nexport const changeAvatar = (avatar) => {\r\n    return fetch(`${config.baseUrl}/users/me/avatar `, {\r\n        method: 'PATCH',\r\n        headers: {\r\n            authorization: 'c430b10e-6e02-4ef6-8316-b9743be3525c',\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n            avatar: avatar\r\n        })\r\n    })\r\n    .then(res => {\r\n        if (res.ok) {\r\n          return res.json();\r\n        }\r\n        return Promise.reject(`Ошибка: ${res.status}`)\r\n    })\r\n}","import '/src/pages/index.css';\n\nimport { openModal, closeModal, closeModalOverlay } from '/src/scripts/components/modal.js';\nimport {createCard, likeCard, removeCard} from '/src/scripts/components/card.js';\nimport {enableValidation, clearValidation} from '../src/scripts/components/validation.js'\nimport {getUserName, getInitialCards, editUserProfile, postNewCard, putLike, deleteLike, deleteCard, changeAvatar } from '../src/scripts/components/api.js'\n\n\n// @todo: DOM узлы\nconst placesList = document.querySelector('.places__list');\n//элементы\nconst popups = document.querySelectorAll('.popup');\nconst popupProfile = document.querySelector('.popup_type_edit');\nconst popupNewCard = document.querySelector('.popup_type_new-card');\nconst popupImage = document.querySelector('.popup__image');\nconst popupImageText = document.querySelector('.popup__caption');\nconst popupTypeImage = document.querySelector('.popup_type_image');\nconst avatarChangePopup = document.querySelector('.popup_change_avatar');\nconst profileTitle = document.querySelector('.profile__title');\nconst profileDescription = document.querySelector('.profile__description');\nconst profileImage = document.querySelector('.profile__image')\n//кнопки\nconst editButton = document.querySelector('.profile__edit-button');\nconst profileAddButton = document.querySelector('.profile__add-button');\n//формы\nconst newPlaceForm = document.forms.newPlace;\nconst editProfileForm = document.forms.editProfile\nconst nameInput = editProfileForm.name;\nconst jobInput = editProfileForm.description;\nconst profileImageForm = document.forms.profileImage;\nconst popupButton = document.forms.popupButton;\n//объект с настройками валидации\nconst validationConfig = {\n    formSelector: '.popup__form',\n    inputSelector: '.popup__input',\n    submitButtonSelector: '.popup__button',\n    inactiveButtonClass: 'popup__button_disabled',\n    inputErrorClass: 'popup__input_type_error',\n    errorClass: 'popup__error_visible',\n}\n\n//загрузка\nfunction renderLoading (isLoading) {\n    if (isLoading) {\n        popupButton.textContent = 'Загружается...'\n    } else {\n        popupButton.textContent = ''\n    }\n}\n\n//общая функция лайка\nconst handleLikeCard = (cardLikeButton, id, cardLikeCounter) => {\n    if (cardLikeButton.classList.contains('card__like-button_is-active')) {\n        deleteLike(id)\n        .then (data => {\n            //отображение лайков карточки\n            cardLikeCounter.textContent = data.likes.length\n            likeCard(cardLikeButton)\n        })\n        .catch((err) => {\n            console.log(err)\n        })\n    } else {\n        putLike(id)\n        .then (data => {\n            renderLoading(true)\n            //отображение лайков карточки\n            cardLikeCounter.textContent = data.likes.length\n            likeCard(cardLikeButton)\n        })\n        .catch((err) => {\n            console.log(err)\n        })\n    }\n}\n\n//открытие попапа формы изменения профиля\nconst openPopupProfileForm = () => {\n    //изменине значения плейсхолдера в редактировании имени и инфы о себе\n    nameInput.value = profileTitle.textContent;\n    jobInput.value = profileDescription.textContent;\n    // включение валидации вызовом enableValidation\n    // все настройки передаются при вызове\n    enableValidation(validationConfig);\n    clearValidation(editProfileForm, validationConfig)\n    openModal(popupProfile)\n}\n\n// отправка формы изменения профиля\nconst handleProfileFormSubmit = (evt) => {\n    evt.preventDefault();\n    renderLoading(true)\n    \n    // Получите значение полей jobInput и nameInput из свойства value\n    const userName = nameInput.value;\n    const userJob = jobInput.value;\n\n    // Вставьте новые значения\n    editUserProfile(userName, userJob)\n    .then((data) => {\n        profileTitle.textContent = data.name;\n        profileDescription.textContent = data.about;\n    })\n    .catch ((err) => {\n        console.log(err);\n    })\n    .finally (() => renderLoading(false))\n\n    closeModal(popupProfile);\n    editProfileForm.reset();\n}\n//функция клика по изображению\nconst increaseImage = (image, text) => {\n    \n    popupImage.src = image.src;\n    popupImage.alt = image.alt;\n    popupImageText.textContent = text.textContent;\n\n    openModal(popupTypeImage)\n}\n\n//объект параметров для createCard\nconst params = {\n    removeCard: removeCard, \n    deleteCard: deleteCard, \n    ownerId: '1f9f7c9071d9a15cea3537ff', \n    openModal: openModal,\n    closeModal: closeModal,\n    handleLikeCard: handleLikeCard,\n    increaseImage: increaseImage\n}\n\n//функция добавления карточки в разметку через попап\nconst handleCardFormSubmit = (evt) => {\n    evt.preventDefault();\n    renderLoading(true)\n    const newPlaceCard = {\n        name: newPlaceForm.name.value,\n        link: newPlaceForm.link.value\n    }\n\n    postNewCard(newPlaceCard)\n    .then((data) => {\n        console.log(data)\n        placesList.prepend(createCard(\n            data,\n            params\n        ));\n    })\n    .catch((err) => {\n        console.log(err)\n    })\n    .finally (() => renderLoading(false))\n\n    clearValidation(newPlaceForm, validationConfig);\n    closeModal(popupNewCard)    \n    newPlaceForm.reset();\n}\n\n//вывожу инфу о профиле и все карточки\nPromise.all([getUserName(), getInitialCards()])\n.then ((data) => {\n    profileTitle.textContent = data[0].name;\n    profileDescription.textContent = data[0].about;\n    profileImage.style = `background-image: url(\"${data[0].avatar}\")`\n    return data[1].forEach ((cardElement) => {\n        placesList.append(createCard(cardElement, params));\n    })\n})\n.catch ((err) => {\n    console.log(err);\n})\n\n// Прикрепляем обработчик к форме: он будет следить за событием “submit” - «отправка»\neditProfileForm.addEventListener('submit', handleProfileFormSubmit); \n\n//слушатель добавления новой карточки через форму\nnewPlaceForm.addEventListener('submit', handleCardFormSubmit);\n\n//перебор массива popup и процесс закрытия попапов\npopups.forEach((element) => {\n    //закрытие попапа кнопкой\n    const closeButton = element.querySelector('.popup__close')\n    closeButton.addEventListener('click', () => closeModal(element))\n    //закрытие попапа кликом вне элемента\n    element.addEventListener('click', closeModalOverlay)\n})\n\n// открытие попапов в шапке сайта\n//(изменение профиля, добавление карточки, изменение аватара)\neditButton.addEventListener('click', openPopupProfileForm);\nprofileAddButton.addEventListener('click', () => {\n    openModal(popupNewCard);\n    enableValidation(validationConfig);\n});\nprofileImage.addEventListener('click', () => {\n    clearValidation(profileImageForm, validationConfig)\n    openModal(avatarChangePopup);\n    enableValidation(validationConfig)\n})\n\n//изменение аватара\nprofileImageForm.addEventListener('submit', () => {\n    renderLoading(true)\n    changeAvatar(profileImageForm.image.value)\n    .then (data => {\n        profileImage.style = `background-image: url(\"${data.avatar}\")`;\n        closeModal(avatarChangePopup)\n    })\n    .catch ((err) => {\n        console.log(err);\n    })\n    .finally (() => renderLoading(false))\n\n})\n\n"],"names":["closeModalEscape","evt","key","openedPopup","document","querySelector","closeModal","openModal","element","classList","add","addEventListener","remove","removeEventListener","closeModalOverlay","target","contains","likeCard","toggle","createCard","cardElement","params","card","content","cloneNode","cardImage","cardTitle","cardLikeCounter","src","link","alt","name","textContent","likes","length","ownerId","cardLikeButton","find","item","_id","handleLikeCard","increaseImage","cardDeleteButton","owner","deleteCard","then","res","removeCard","console","log","catch","err","handleDeleteCard","hideInputError","formElement","inputElement","validationConfig","errorElement","concat","inputErrorClass","errorClass","toggleButtonState","inputList","buttonElement","some","validity","valid","hasInvalidInput","inactiveButtonClass","enableValidation","Array","from","querySelectorAll","formSelector","forEach","preventDefault","inputSelector","submitButtonSelector","patternMismatch","setCustomValidity","dataset","errorMessage","showInputError","validationMessage","checkInputValidity","setEventListeners","clearValidation","config","placesList","popups","popupProfile","popupNewCard","popupImage","popupImageText","popupTypeImage","avatarChangePopup","profileTitle","profileDescription","profileImage","editButton","profileAddButton","newPlaceForm","forms","newPlace","editProfileForm","editProfile","nameInput","jobInput","description","profileImageForm","popupButton","renderLoading","isLoading","cardId","fetch","method","headers","authorization","ok","json","Promise","reject","status","id","data","putLike","image","text","all","about","style","avatar","append","value","body","JSON","stringify","finally","reset","_ref","prepend"],"sourceRoot":""}